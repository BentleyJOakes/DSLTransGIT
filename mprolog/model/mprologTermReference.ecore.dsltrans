<?xml version="1.0" encoding="UTF-8"?>
<dsltrans:TransformationModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dsltrans="http://dsltrans/2.0">
  <source xsi:type="dsltrans:FilePort" name="inputModel" filePathURI="model\outputresult.xmi">
    <metaModelId metaModelURI="model\mprologTermReference.ecore" metaModelName="mprologTermReference.MprologTermReference"/>
  </source>
  <source xsi:type="dsltrans:Sequential" name="Entities" description="Entities" previousSource="//@source.0" outputFilePathURI="model\result.xmi">
    <metaModelId metaModelURI="model\mprolog.ecore" metaModelName="mprolog.Mprolog"/>
    <hasRule description="Operator">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Operator">
          <attribute attributeName="symbol"/>
        </class>
      </match>
      <apply>
        <class packageName="mprolog" className="Operator">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
          <attribute attributeName="symbol">
            <attributeValue xsi:type="dsltrans:AttributeRef" attributeRef="//@source.1/@hasRule.0/@match.0/@class.0/@attribute.0"/>
          </attribute>
        </class>
      </apply>
    </hasRule>
    <hasRule description="InfixExpression">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="InfixExpression"/>
      </match>
      <apply>
        <class packageName="mprolog" className="InfixExpression">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
        </class>
      </apply>
    </hasRule>
    <hasRule description="Model">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Model">
          <attribute attributeName="name"/>
        </class>
      </match>
      <apply>
        <class packageName="mprolog" className="Model">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Model"/>
          </attribute>
          <attribute attributeName="name">
            <attributeValue xsi:type="dsltrans:AttributeRef" attributeRef="//@source.1/@hasRule.2/@match.0/@class.0/@attribute.0"/>
          </attribute>
        </class>
      </apply>
    </hasRule>
    <hasRule description="QuotedAtom">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="QuotedAtom">
          <attribute attributeName="text"/>
        </class>
      </match>
      <apply>
        <class packageName="mprolog" className="QuotedAtom">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
          <attribute attributeName="text">
            <attributeValue xsi:type="dsltrans:AttributeRef" attributeRef="//@source.1/@hasRule.3/@match.0/@class.0/@attribute.0"/>
          </attribute>
        </class>
      </apply>
    </hasRule>
    <hasRule description="Head">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Head"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Head">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Head"/>
          </attribute>
        </class>
      </apply>
    </hasRule>
    <hasRule description="Variable">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Variable">
          <attribute attributeName="name"/>
        </class>
      </match>
      <apply>
        <class packageName="mprolog" className="Variable">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
          <attribute attributeName="name">
            <attributeValue xsi:type="dsltrans:AttributeRef" attributeRef="//@source.1/@hasRule.5/@match.0/@class.0/@attribute.0"/>
          </attribute>
        </class>
      </apply>
    </hasRule>
    <hasRule description="Clause">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Clause"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Clause">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Clause"/>
          </attribute>
        </class>
      </apply>
    </hasRule>
    <hasRule description="Functor">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Functor">
          <attribute attributeName="text"/>
        </class>
      </match>
      <apply>
        <class packageName="mprolog" className="Functor">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
          <attribute attributeName="text">
            <attributeValue xsi:type="dsltrans:AttributeRef" attributeRef="//@source.1/@hasRule.7/@match.0/@class.0/@attribute.0"/>
          </attribute>
        </class>
      </apply>
    </hasRule>
    <hasRule description="Body">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Body"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Body">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Body"/>
          </attribute>
        </class>
      </apply>
    </hasRule>
    <hasRule description="List">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="List"/>
      </match>
      <apply>
        <class packageName="mprolog" className="List">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
        </class>
      </apply>
    </hasRule>
    <hasRule description="Parenthesis">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Parenthesis"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Parenthesis">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
        </class>
      </apply>
    </hasRule>
  </source>
  <source xsi:type="dsltrans:Sequential" name="Associations" description="Associations" previousSource="//@source.3" outputFilePathURI="model\result.xmi">
    <metaModelId metaModelURI="model\mprolog.ecore" metaModelName="mprolog.Mprolog"/>
    <hasRule description="ownedFunctor">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Head"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Functor"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedFunctor" source="//@source.2/@hasRule.0/@match.0/@class.0" target="//@source.2/@hasRule.0/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Head"/>
        <class packageName="mprolog" className="Functor">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
        </class>
        <association associationName="ownedFunctor" source="//@source.2/@hasRule.0/@apply/@class.0" target="//@source.2/@hasRule.0/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.0/@apply/@class.0" sourceClass="//@source.2/@hasRule.0/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.0/@apply/@class.1" sourceClass="//@source.2/@hasRule.0/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedOperator">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="InfixExpression"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Operator"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedOperator" source="//@source.2/@hasRule.1/@match.0/@class.0" target="//@source.2/@hasRule.1/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="InfixExpression"/>
        <class packageName="mprolog" className="Operator"/>
        <association associationName="ownedOperator" source="//@source.2/@hasRule.1/@apply/@class.0" target="//@source.2/@hasRule.1/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.1/@apply/@class.0" sourceClass="//@source.2/@hasRule.1/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.1/@apply/@class.1" sourceClass="//@source.2/@hasRule.1/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedClause">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Model"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Clause"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedClause" source="//@source.2/@hasRule.2/@match.0/@class.0" target="//@source.2/@hasRule.2/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Model"/>
        <class packageName="mprolog" className="Clause"/>
        <association associationName="ownedClause" source="//@source.2/@hasRule.2/@apply/@class.0" target="//@source.2/@hasRule.2/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.2/@apply/@class.0" sourceClass="//@source.2/@hasRule.2/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.2/@apply/@class.1" sourceClass="//@source.2/@hasRule.2/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedHead">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Clause"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Head"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedHead" source="//@source.2/@hasRule.3/@match.0/@class.0" target="//@source.2/@hasRule.3/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Clause"/>
        <class packageName="mprolog" className="Head"/>
        <association associationName="ownedHead" source="//@source.2/@hasRule.3/@apply/@class.0" target="//@source.2/@hasRule.3/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.3/@apply/@class.0" sourceClass="//@source.2/@hasRule.3/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.3/@apply/@class.1" sourceClass="//@source.2/@hasRule.3/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedBody">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Clause"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Body"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedBody" source="//@source.2/@hasRule.4/@match.0/@class.0" target="//@source.2/@hasRule.4/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Clause"/>
        <class packageName="mprolog" className="Body"/>
        <association associationName="ownedBody" source="//@source.2/@hasRule.4/@apply/@class.0" target="//@source.2/@hasRule.4/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.4/@apply/@class.0" sourceClass="//@source.2/@hasRule.4/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.4/@apply/@class.1" sourceClass="//@source.2/@hasRule.4/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="leftTerm">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="InfixExpression"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="QuotedAtom"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="leftTerm" source="//@source.2/@hasRule.5/@match.0/@class.0" target="//@source.2/@hasRule.5/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="InfixExpression"/>
        <class packageName="mprolog" className="QuotedAtom"/>
        <association associationName="leftTerm" source="//@source.2/@hasRule.5/@apply/@class.0" target="//@source.2/@hasRule.5/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.5/@apply/@class.0" sourceClass="//@source.2/@hasRule.5/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.5/@apply/@class.1" sourceClass="//@source.2/@hasRule.5/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="rightTerm">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="InfixExpression"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="QuotedAtom"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="rightTerm" source="//@source.2/@hasRule.6/@match.0/@class.0" target="//@source.2/@hasRule.6/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="InfixExpression"/>
        <class packageName="mprolog" className="QuotedAtom"/>
        <association associationName="rightTerm" source="//@source.2/@hasRule.6/@apply/@class.0" target="//@source.2/@hasRule.6/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.6/@apply/@class.0" sourceClass="//@source.2/@hasRule.6/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.6/@apply/@class.1" sourceClass="//@source.2/@hasRule.6/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedTerm">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Functor"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="QuotedAtom"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedTerm" source="//@source.2/@hasRule.7/@match.0/@class.0" target="//@source.2/@hasRule.7/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Functor">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
        </class>
        <class packageName="mprolog" className="QuotedAtom"/>
        <association associationName="ownedTerm" source="//@source.2/@hasRule.7/@apply/@class.0" target="//@source.2/@hasRule.7/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.7/@apply/@class.0" sourceClass="//@source.2/@hasRule.7/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.7/@apply/@class.1" sourceClass="//@source.2/@hasRule.7/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedTerm">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Body"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="QuotedAtom"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedTerm" source="//@source.2/@hasRule.8/@match.0/@class.0" target="//@source.2/@hasRule.8/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Body"/>
        <class packageName="mprolog" className="QuotedAtom"/>
        <association associationName="ownedTerm" source="//@source.2/@hasRule.8/@apply/@class.0" target="//@source.2/@hasRule.8/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.8/@apply/@class.0" sourceClass="//@source.2/@hasRule.8/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.8/@apply/@class.1" sourceClass="//@source.2/@hasRule.8/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedHeadTerms">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="List"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="QuotedAtom"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedHeadTerms" source="//@source.2/@hasRule.9/@match.0/@class.0" target="//@source.2/@hasRule.9/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="List"/>
        <class packageName="mprolog" className="QuotedAtom"/>
        <association associationName="ownedHeadTerms" source="//@source.2/@hasRule.9/@apply/@class.0" target="//@source.2/@hasRule.9/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.9/@apply/@class.0" sourceClass="//@source.2/@hasRule.9/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.9/@apply/@class.1" sourceClass="//@source.2/@hasRule.9/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedTailTerms">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="List"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="QuotedAtom"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedTailTerms" source="//@source.2/@hasRule.10/@match.0/@class.0" target="//@source.2/@hasRule.10/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="List"/>
        <class packageName="mprolog" className="QuotedAtom"/>
        <association associationName="ownedTailTerms" source="//@source.2/@hasRule.10/@apply/@class.0" target="//@source.2/@hasRule.10/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.10/@apply/@class.0" sourceClass="//@source.2/@hasRule.10/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.10/@apply/@class.1" sourceClass="//@source.2/@hasRule.10/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="leftTerm">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="InfixExpression"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="InfixExpression"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="leftTerm" source="//@source.2/@hasRule.11/@match.0/@class.0" target="//@source.2/@hasRule.11/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="InfixExpression"/>
        <class packageName="mprolog" className="InfixExpression"/>
        <association associationName="leftTerm" source="//@source.2/@hasRule.11/@apply/@class.0" target="//@source.2/@hasRule.11/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.11/@apply/@class.0" sourceClass="//@source.2/@hasRule.11/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.11/@apply/@class.1" sourceClass="//@source.2/@hasRule.11/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="rightTerm">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="InfixExpression"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="InfixExpression"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="rightTerm" source="//@source.2/@hasRule.12/@match.0/@class.0" target="//@source.2/@hasRule.12/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="InfixExpression"/>
        <class packageName="mprolog" className="InfixExpression"/>
        <association associationName="rightTerm" source="//@source.2/@hasRule.12/@apply/@class.0" target="//@source.2/@hasRule.12/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.12/@apply/@class.0" sourceClass="//@source.2/@hasRule.12/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.12/@apply/@class.1" sourceClass="//@source.2/@hasRule.12/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedTerm">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Functor"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="InfixExpression"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedTerm" source="//@source.2/@hasRule.13/@match.0/@class.0" target="//@source.2/@hasRule.13/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Functor">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
        </class>
        <class packageName="mprolog" className="InfixExpression"/>
        <association associationName="ownedTerm" source="//@source.2/@hasRule.13/@apply/@class.0" target="//@source.2/@hasRule.13/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.13/@apply/@class.0" sourceClass="//@source.2/@hasRule.13/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.13/@apply/@class.1" sourceClass="//@source.2/@hasRule.13/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedTerm">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Body"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="InfixExpression"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedTerm" source="//@source.2/@hasRule.14/@match.0/@class.0" target="//@source.2/@hasRule.14/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Body"/>
        <class packageName="mprolog" className="InfixExpression"/>
        <association associationName="ownedTerm" source="//@source.2/@hasRule.14/@apply/@class.0" target="//@source.2/@hasRule.14/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.14/@apply/@class.0" sourceClass="//@source.2/@hasRule.14/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.14/@apply/@class.1" sourceClass="//@source.2/@hasRule.14/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedHeadTerms">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="List"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="InfixExpression"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedHeadTerms" source="//@source.2/@hasRule.15/@match.0/@class.0" target="//@source.2/@hasRule.15/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="List"/>
        <class packageName="mprolog" className="InfixExpression"/>
        <association associationName="ownedHeadTerms" source="//@source.2/@hasRule.15/@apply/@class.0" target="//@source.2/@hasRule.15/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.15/@apply/@class.0" sourceClass="//@source.2/@hasRule.15/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.15/@apply/@class.1" sourceClass="//@source.2/@hasRule.15/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedTailTerms">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="List"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="InfixExpression"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedTailTerms" source="//@source.2/@hasRule.16/@match.0/@class.0" target="//@source.2/@hasRule.16/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="List"/>
        <class packageName="mprolog" className="InfixExpression"/>
        <association associationName="ownedTailTerms" source="//@source.2/@hasRule.16/@apply/@class.0" target="//@source.2/@hasRule.16/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.16/@apply/@class.0" sourceClass="//@source.2/@hasRule.16/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.16/@apply/@class.1" sourceClass="//@source.2/@hasRule.16/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="leftTerm">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="InfixExpression"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Variable"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="leftTerm" source="//@source.2/@hasRule.17/@match.0/@class.0" target="//@source.2/@hasRule.17/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="InfixExpression"/>
        <class packageName="mprolog" className="Variable">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
        </class>
        <association associationName="leftTerm" source="//@source.2/@hasRule.17/@apply/@class.0" target="//@source.2/@hasRule.17/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.17/@apply/@class.0" sourceClass="//@source.2/@hasRule.17/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.17/@apply/@class.1" sourceClass="//@source.2/@hasRule.17/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="rightTerm">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="InfixExpression"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Variable"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="rightTerm" source="//@source.2/@hasRule.18/@match.0/@class.0" target="//@source.2/@hasRule.18/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="InfixExpression"/>
        <class packageName="mprolog" className="Variable">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
        </class>
        <association associationName="rightTerm" source="//@source.2/@hasRule.18/@apply/@class.0" target="//@source.2/@hasRule.18/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.18/@apply/@class.0" sourceClass="//@source.2/@hasRule.18/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.18/@apply/@class.1" sourceClass="//@source.2/@hasRule.18/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedTerm">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Functor"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Variable"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedTerm" source="//@source.2/@hasRule.19/@match.0/@class.0" target="//@source.2/@hasRule.19/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Functor">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
        </class>
        <class packageName="mprolog" className="Variable">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
        </class>
        <association associationName="ownedTerm" source="//@source.2/@hasRule.19/@apply/@class.0" target="//@source.2/@hasRule.19/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.19/@apply/@class.0" sourceClass="//@source.2/@hasRule.19/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.19/@apply/@class.1" sourceClass="//@source.2/@hasRule.19/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedTerm">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Body"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Variable"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedTerm" source="//@source.2/@hasRule.20/@match.0/@class.0" target="//@source.2/@hasRule.20/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Body"/>
        <class packageName="mprolog" className="Variable">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
        </class>
        <association associationName="ownedTerm" source="//@source.2/@hasRule.20/@apply/@class.0" target="//@source.2/@hasRule.20/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.20/@apply/@class.0" sourceClass="//@source.2/@hasRule.20/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.20/@apply/@class.1" sourceClass="//@source.2/@hasRule.20/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedHeadTerms">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="List"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Variable"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedHeadTerms" source="//@source.2/@hasRule.21/@match.0/@class.0" target="//@source.2/@hasRule.21/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="List"/>
        <class packageName="mprolog" className="Variable">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
        </class>
        <association associationName="ownedHeadTerms" source="//@source.2/@hasRule.21/@apply/@class.0" target="//@source.2/@hasRule.21/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.21/@apply/@class.0" sourceClass="//@source.2/@hasRule.21/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.21/@apply/@class.1" sourceClass="//@source.2/@hasRule.21/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedTailTerms">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="List"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Variable"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedTailTerms" source="//@source.2/@hasRule.22/@match.0/@class.0" target="//@source.2/@hasRule.22/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="List"/>
        <class packageName="mprolog" className="Variable">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
        </class>
        <association associationName="ownedTailTerms" source="//@source.2/@hasRule.22/@apply/@class.0" target="//@source.2/@hasRule.22/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.22/@apply/@class.0" sourceClass="//@source.2/@hasRule.22/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.22/@apply/@class.1" sourceClass="//@source.2/@hasRule.22/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="leftTerm">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="InfixExpression"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Functor"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="leftTerm" source="//@source.2/@hasRule.23/@match.0/@class.0" target="//@source.2/@hasRule.23/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="InfixExpression"/>
        <class packageName="mprolog" className="Functor">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
        </class>
        <association associationName="leftTerm" source="//@source.2/@hasRule.23/@apply/@class.0" target="//@source.2/@hasRule.23/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.23/@apply/@class.0" sourceClass="//@source.2/@hasRule.23/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.23/@apply/@class.1" sourceClass="//@source.2/@hasRule.23/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="rightTerm">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="InfixExpression"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Functor"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="rightTerm" source="//@source.2/@hasRule.24/@match.0/@class.0" target="//@source.2/@hasRule.24/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="InfixExpression"/>
        <class packageName="mprolog" className="Functor">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
        </class>
        <association associationName="rightTerm" source="//@source.2/@hasRule.24/@apply/@class.0" target="//@source.2/@hasRule.24/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.24/@apply/@class.0" sourceClass="//@source.2/@hasRule.24/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.24/@apply/@class.1" sourceClass="//@source.2/@hasRule.24/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedTerm">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Functor"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Functor"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedTerm" source="//@source.2/@hasRule.25/@match.0/@class.0" target="//@source.2/@hasRule.25/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Functor">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
        </class>
        <class packageName="mprolog" className="Functor">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
        </class>
        <association associationName="ownedTerm" source="//@source.2/@hasRule.25/@apply/@class.0" target="//@source.2/@hasRule.25/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.25/@apply/@class.0" sourceClass="//@source.2/@hasRule.25/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.25/@apply/@class.1" sourceClass="//@source.2/@hasRule.25/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedTerm">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Body"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Functor"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedTerm" source="//@source.2/@hasRule.26/@match.0/@class.0" target="//@source.2/@hasRule.26/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Body"/>
        <class packageName="mprolog" className="Functor">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
        </class>
        <association associationName="ownedTerm" source="//@source.2/@hasRule.26/@apply/@class.0" target="//@source.2/@hasRule.26/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.26/@apply/@class.0" sourceClass="//@source.2/@hasRule.26/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.26/@apply/@class.1" sourceClass="//@source.2/@hasRule.26/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedHeadTerms">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="List"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Functor"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedHeadTerms" source="//@source.2/@hasRule.27/@match.0/@class.0" target="//@source.2/@hasRule.27/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="List"/>
        <class packageName="mprolog" className="Functor">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
        </class>
        <association associationName="ownedHeadTerms" source="//@source.2/@hasRule.27/@apply/@class.0" target="//@source.2/@hasRule.27/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.27/@apply/@class.0" sourceClass="//@source.2/@hasRule.27/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.27/@apply/@class.1" sourceClass="//@source.2/@hasRule.27/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedTailTerms">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="List"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Functor"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedTailTerms" source="//@source.2/@hasRule.28/@match.0/@class.0" target="//@source.2/@hasRule.28/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="List"/>
        <class packageName="mprolog" className="Functor">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
        </class>
        <association associationName="ownedTailTerms" source="//@source.2/@hasRule.28/@apply/@class.0" target="//@source.2/@hasRule.28/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.28/@apply/@class.0" sourceClass="//@source.2/@hasRule.28/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.28/@apply/@class.1" sourceClass="//@source.2/@hasRule.28/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="leftTerm">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="InfixExpression"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="List"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="leftTerm" source="//@source.2/@hasRule.29/@match.0/@class.0" target="//@source.2/@hasRule.29/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="InfixExpression"/>
        <class packageName="mprolog" className="List"/>
        <association associationName="leftTerm" source="//@source.2/@hasRule.29/@apply/@class.0" target="//@source.2/@hasRule.29/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.29/@apply/@class.0" sourceClass="//@source.2/@hasRule.29/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.29/@apply/@class.1" sourceClass="//@source.2/@hasRule.29/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="rightTerm">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="InfixExpression"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="List"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="rightTerm" source="//@source.2/@hasRule.30/@match.0/@class.0" target="//@source.2/@hasRule.30/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="InfixExpression"/>
        <class packageName="mprolog" className="List"/>
        <association associationName="rightTerm" source="//@source.2/@hasRule.30/@apply/@class.0" target="//@source.2/@hasRule.30/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.30/@apply/@class.0" sourceClass="//@source.2/@hasRule.30/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.30/@apply/@class.1" sourceClass="//@source.2/@hasRule.30/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedTerm">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Functor"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="List"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedTerm" source="//@source.2/@hasRule.31/@match.0/@class.0" target="//@source.2/@hasRule.31/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Functor">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
        </class>
        <class packageName="mprolog" className="List"/>
        <association associationName="ownedTerm" source="//@source.2/@hasRule.31/@apply/@class.0" target="//@source.2/@hasRule.31/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.31/@apply/@class.0" sourceClass="//@source.2/@hasRule.31/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.31/@apply/@class.1" sourceClass="//@source.2/@hasRule.31/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedTerm">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Body"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="List"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedTerm" source="//@source.2/@hasRule.32/@match.0/@class.0" target="//@source.2/@hasRule.32/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Body"/>
        <class packageName="mprolog" className="List"/>
        <association associationName="ownedTerm" source="//@source.2/@hasRule.32/@apply/@class.0" target="//@source.2/@hasRule.32/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.32/@apply/@class.0" sourceClass="//@source.2/@hasRule.32/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.32/@apply/@class.1" sourceClass="//@source.2/@hasRule.32/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedHeadTerms">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="List"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="List"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedHeadTerms" source="//@source.2/@hasRule.33/@match.0/@class.0" target="//@source.2/@hasRule.33/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="List"/>
        <class packageName="mprolog" className="List"/>
        <association associationName="ownedHeadTerms" source="//@source.2/@hasRule.33/@apply/@class.0" target="//@source.2/@hasRule.33/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.33/@apply/@class.0" sourceClass="//@source.2/@hasRule.33/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.33/@apply/@class.1" sourceClass="//@source.2/@hasRule.33/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedTailTerms">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="List"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="List"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedTailTerms" source="//@source.2/@hasRule.34/@match.0/@class.0" target="//@source.2/@hasRule.34/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="List"/>
        <class packageName="mprolog" className="List"/>
        <association associationName="ownedTailTerms" source="//@source.2/@hasRule.34/@apply/@class.0" target="//@source.2/@hasRule.34/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.34/@apply/@class.0" sourceClass="//@source.2/@hasRule.34/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.34/@apply/@class.1" sourceClass="//@source.2/@hasRule.34/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="nextTerm">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Term"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Term"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="nextTerm" source="//@source.2/@hasRule.35/@match.0/@class.0" target="//@source.2/@hasRule.35/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Term">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
        </class>
        <class packageName="mprolog" className="Term">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
        </class>
        <association associationName="nextTerm" source="//@source.2/@hasRule.35/@apply/@class.0" target="//@source.2/@hasRule.35/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.35/@apply/@class.0" sourceClass="//@source.2/@hasRule.35/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.35/@apply/@class.1" sourceClass="//@source.2/@hasRule.35/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedTerm">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Parenthesis"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="QuotedAtom"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedTerm" source="//@source.2/@hasRule.36/@match.0/@class.0" target="//@source.2/@hasRule.36/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Parenthesis"/>
        <class packageName="mprolog" className="QuotedAtom"/>
        <association associationName="ownedTerm" source="//@source.2/@hasRule.36/@apply/@class.0" target="//@source.2/@hasRule.36/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.36/@apply/@class.0" sourceClass="//@source.2/@hasRule.36/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.36/@apply/@class.1" sourceClass="//@source.2/@hasRule.36/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedTerm">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Parenthesis"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Parenthesis"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedTerm" source="//@source.2/@hasRule.37/@match.0/@class.0" target="//@source.2/@hasRule.37/@match.0/@class.1"/>
      </match>
      <apply>
        <class description="" packageName="mprolog" className="Parenthesis"/>
        <class packageName="mprolog" className="Parenthesis"/>
        <association associationName="ownedTerm" source="//@source.2/@hasRule.37/@apply/@class.0" target="//@source.2/@hasRule.37/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.37/@apply/@class.0" sourceClass="//@source.2/@hasRule.37/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.37/@apply/@class.1" sourceClass="//@source.2/@hasRule.37/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedTerm">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Functor"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Parenthesis"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedTerm" source="//@source.2/@hasRule.38/@match.0/@class.0" target="//@source.2/@hasRule.38/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Functor">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
        </class>
        <class packageName="mprolog" className="Parenthesis"/>
        <association associationName="ownedTerm" source="//@source.2/@hasRule.38/@apply/@class.0" target="//@source.2/@hasRule.38/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.38/@apply/@class.0" sourceClass="//@source.2/@hasRule.38/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.38/@apply/@class.1" sourceClass="//@source.2/@hasRule.38/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedTerm">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Body"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Parenthesis"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedTerm" source="//@source.2/@hasRule.39/@match.0/@class.0" target="//@source.2/@hasRule.39/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Body"/>
        <class packageName="mprolog" className="Parenthesis"/>
        <association associationName="ownedTerm" source="//@source.2/@hasRule.39/@apply/@class.0" target="//@source.2/@hasRule.39/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.39/@apply/@class.0" sourceClass="//@source.2/@hasRule.39/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.39/@apply/@class.1" sourceClass="//@source.2/@hasRule.39/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedHeadTerms">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="List"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Parenthesis"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedHeadTerms" source="//@source.2/@hasRule.40/@match.0/@class.0" target="//@source.2/@hasRule.40/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="List"/>
        <class packageName="mprolog" className="Parenthesis"/>
        <association associationName="ownedHeadTerms" source="//@source.2/@hasRule.40/@apply/@class.0" target="//@source.2/@hasRule.40/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.40/@apply/@class.0" sourceClass="//@source.2/@hasRule.40/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.40/@apply/@class.1" sourceClass="//@source.2/@hasRule.40/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedTailTerms">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="List"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Parenthesis"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedTailTerms" source="//@source.2/@hasRule.41/@match.0/@class.0" target="//@source.2/@hasRule.41/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="List"/>
        <class packageName="mprolog" className="Parenthesis"/>
        <association associationName="ownedTailTerms" source="//@source.2/@hasRule.41/@apply/@class.0" target="//@source.2/@hasRule.41/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.41/@apply/@class.0" sourceClass="//@source.2/@hasRule.41/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.41/@apply/@class.1" sourceClass="//@source.2/@hasRule.41/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedTerm">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Parenthesis"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Variable"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedTerm" source="//@source.2/@hasRule.42/@match.0/@class.0" target="//@source.2/@hasRule.42/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Parenthesis"/>
        <class packageName="mprolog" className="Variable">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
        </class>
        <association associationName="ownedTerm" source="//@source.2/@hasRule.42/@apply/@class.0" target="//@source.2/@hasRule.42/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.42/@apply/@class.0" sourceClass="//@source.2/@hasRule.42/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.42/@apply/@class.1" sourceClass="//@source.2/@hasRule.42/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedTerm">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Parenthesis"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Functor"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedTerm" source="//@source.2/@hasRule.43/@match.0/@class.0" target="//@source.2/@hasRule.43/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Parenthesis"/>
        <class packageName="mprolog" className="Functor">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
        </class>
        <association associationName="ownedTerm" source="//@source.2/@hasRule.43/@apply/@class.0" target="//@source.2/@hasRule.43/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.43/@apply/@class.0" sourceClass="//@source.2/@hasRule.43/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.43/@apply/@class.1" sourceClass="//@source.2/@hasRule.43/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedTerm">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Parenthesis"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="List"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedTerm" source="//@source.2/@hasRule.44/@match.0/@class.0" target="//@source.2/@hasRule.44/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Parenthesis"/>
        <class packageName="mprolog" className="List"/>
        <association associationName="ownedTerm" source="//@source.2/@hasRule.44/@apply/@class.0" target="//@source.2/@hasRule.44/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.44/@apply/@class.0" sourceClass="//@source.2/@hasRule.44/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.44/@apply/@class.1" sourceClass="//@source.2/@hasRule.44/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="leftTerm">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="InfixExpression"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Parenthesis"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="leftTerm" source="//@source.2/@hasRule.45/@match.0/@class.0" target="//@source.2/@hasRule.45/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="InfixExpression"/>
        <class packageName="mprolog" className="Parenthesis"/>
        <association associationName="leftTerm" source="//@source.2/@hasRule.45/@apply/@class.0" target="//@source.2/@hasRule.45/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.45/@apply/@class.0" sourceClass="//@source.2/@hasRule.45/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.45/@apply/@class.1" sourceClass="//@source.2/@hasRule.45/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="rightTerm">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="InfixExpression"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Parenthesis"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="rightTerm" source="//@source.2/@hasRule.46/@match.0/@class.0" target="//@source.2/@hasRule.46/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="InfixExpression"/>
        <class packageName="mprolog" className="Parenthesis"/>
        <association associationName="rightTerm" source="//@source.2/@hasRule.46/@apply/@class.0" target="//@source.2/@hasRule.46/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.46/@apply/@class.0" sourceClass="//@source.2/@hasRule.46/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.46/@apply/@class.1" sourceClass="//@source.2/@hasRule.46/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="ownedTerm">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Parenthesis"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="InfixExpression"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedTerm" source="//@source.2/@hasRule.47/@match.0/@class.0" target="//@source.2/@hasRule.47/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Parenthesis"/>
        <class packageName="mprolog" className="InfixExpression"/>
        <association associationName="ownedTerm" source="//@source.2/@hasRule.47/@apply/@class.0" target="//@source.2/@hasRule.47/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.47/@apply/@class.0" sourceClass="//@source.2/@hasRule.47/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.47/@apply/@class.1" sourceClass="//@source.2/@hasRule.47/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="TermReference">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="TermReference"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="FunctorReference"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedTerm" source="//@source.2/@hasRule.48/@match.0/@class.1" target="//@source.2/@hasRule.48/@match.0/@class.0"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Term"/>
        <class packageName="mprolog" className="Functor"/>
        <association associationName="ownedTerm" source="//@source.2/@hasRule.48/@apply/@class.1" target="//@source.2/@hasRule.48/@apply/@class.0"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.48/@apply/@class.0" sourceClass="//@source.2/@hasRule.48/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.48/@apply/@class.1" sourceClass="//@source.2/@hasRule.48/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="TermReference">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Term"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="FunctorReference"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedTerm" source="//@source.2/@hasRule.49/@match.0/@class.1" target="//@source.2/@hasRule.49/@match.0/@class.0"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Term">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
        </class>
        <class packageName="mprolog" className="Functor"/>
        <association associationName="ownedTerm" source="//@source.2/@hasRule.49/@apply/@class.1" target="//@source.2/@hasRule.49/@apply/@class.0"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.49/@apply/@class.0" sourceClass="//@source.2/@hasRule.49/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.49/@apply/@class.1" sourceClass="//@source.2/@hasRule.49/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="TermReference">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="TermReference"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="TermReference"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="nextTerm" source="//@source.2/@hasRule.50/@match.0/@class.1" target="//@source.2/@hasRule.50/@match.0/@class.0"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Term"/>
        <class packageName="mprolog" className="Term"/>
        <association associationName="nextTerm" source="//@source.2/@hasRule.50/@apply/@class.1" target="//@source.2/@hasRule.50/@apply/@class.0"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.50/@apply/@class.0" sourceClass="//@source.2/@hasRule.50/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.50/@apply/@class.1" sourceClass="//@source.2/@hasRule.50/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="TermReference">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Term"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="TermReference"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="nextTerm" source="//@source.2/@hasRule.51/@match.0/@class.0" target="//@source.2/@hasRule.51/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Term">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
        </class>
        <class packageName="mprolog" className="Term"/>
        <association associationName="nextTerm" source="//@source.2/@hasRule.51/@apply/@class.0" target="//@source.2/@hasRule.51/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.51/@apply/@class.0" sourceClass="//@source.2/@hasRule.51/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.51/@apply/@class.1" sourceClass="//@source.2/@hasRule.51/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="TermReference">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Term"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="TermReference"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="nextTerm" source="//@source.2/@hasRule.52/@match.0/@class.1" target="//@source.2/@hasRule.52/@match.0/@class.0"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Term">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
        </class>
        <class packageName="mprolog" className="Term"/>
        <association associationName="nextTerm" source="//@source.2/@hasRule.52/@apply/@class.1" target="//@source.2/@hasRule.52/@apply/@class.0"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.52/@apply/@class.0" sourceClass="//@source.2/@hasRule.52/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.52/@apply/@class.1" sourceClass="//@source.2/@hasRule.52/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="TermReference">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="InfixExpression"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="TermReference"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="rightTerm" source="//@source.2/@hasRule.53/@match.0/@class.0" target="//@source.2/@hasRule.53/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="InfixExpression"/>
        <class packageName="mprolog" className="Term"/>
        <association associationName="rightTerm" source="//@source.2/@hasRule.53/@apply/@class.0" target="//@source.2/@hasRule.53/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.53/@apply/@class.0" sourceClass="//@source.2/@hasRule.53/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.53/@apply/@class.1" sourceClass="//@source.2/@hasRule.53/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="TermReference">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="List"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="TermReference"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedTailTerms" source="//@source.2/@hasRule.54/@match.0/@class.0" target="//@source.2/@hasRule.54/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="List"/>
        <class packageName="mprolog" className="Term"/>
        <association associationName="ownedTailTerms" source="//@source.2/@hasRule.54/@apply/@class.0" target="//@source.2/@hasRule.54/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.54/@apply/@class.0" sourceClass="//@source.2/@hasRule.54/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.54/@apply/@class.1" sourceClass="//@source.2/@hasRule.54/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="TermReference">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="InfixExpression"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="TermReference"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="leftTerm" source="//@source.2/@hasRule.55/@match.0/@class.0" target="//@source.2/@hasRule.55/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="InfixExpression"/>
        <class packageName="mprolog" className="Term"/>
        <association associationName="leftTerm" source="//@source.2/@hasRule.55/@apply/@class.0" target="//@source.2/@hasRule.55/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.55/@apply/@class.0" sourceClass="//@source.2/@hasRule.55/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.55/@apply/@class.1" sourceClass="//@source.2/@hasRule.55/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="TermReference">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Body"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="TermReference"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedTerm" source="//@source.2/@hasRule.56/@match.0/@class.0" target="//@source.2/@hasRule.56/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Body"/>
        <class packageName="mprolog" className="Term"/>
        <association associationName="ownedTerm" source="//@source.2/@hasRule.56/@apply/@class.0" target="//@source.2/@hasRule.56/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.56/@apply/@class.0" sourceClass="//@source.2/@hasRule.56/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.56/@apply/@class.1" sourceClass="//@source.2/@hasRule.56/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="TermReference">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Functor"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="TermReference"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedTerm" source="//@source.2/@hasRule.57/@match.0/@class.0" target="//@source.2/@hasRule.57/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Functor">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="Term"/>
          </attribute>
        </class>
        <class packageName="mprolog" className="Term"/>
        <association associationName="ownedTerm" source="//@source.2/@hasRule.57/@apply/@class.0" target="//@source.2/@hasRule.57/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.57/@apply/@class.0" sourceClass="//@source.2/@hasRule.57/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.57/@apply/@class.1" sourceClass="//@source.2/@hasRule.57/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="TermReference">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="List"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="TermReference"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedHeadTerms" source="//@source.2/@hasRule.58/@match.0/@class.0" target="//@source.2/@hasRule.58/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="List"/>
        <class packageName="mprolog" className="Term"/>
        <association associationName="ownedHeadTerms" source="//@source.2/@hasRule.58/@apply/@class.0" target="//@source.2/@hasRule.58/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.58/@apply/@class.0" sourceClass="//@source.2/@hasRule.58/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.58/@apply/@class.1" sourceClass="//@source.2/@hasRule.58/@match.0/@class.1"/>
    </hasRule>
    <hasRule description="TermReference">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Parenthesis"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="TermReference"/>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="ownedTerm" source="//@source.2/@hasRule.59/@match.0/@class.0" target="//@source.2/@hasRule.59/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Parenthesis"/>
        <class packageName="mprolog" className="Term"/>
        <association associationName="ownedTerm" source="//@source.2/@hasRule.59/@apply/@class.0" target="//@source.2/@hasRule.59/@apply/@class.1"/>
      </apply>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.59/@apply/@class.0" sourceClass="//@source.2/@hasRule.59/@match.0/@class.0"/>
      <backwards xsi:type="dsltrans:PositiveBackwardRestriction" targetClass="//@source.2/@hasRule.59/@apply/@class.1" sourceClass="//@source.2/@hasRule.59/@match.0/@class.1"/>
    </hasRule>
  </source>
  <source xsi:type="dsltrans:Sequential" name="References" description="References" previousSource="//@source.1" outputFilePathURI="model\result.xmi">
    <metaModelId metaModelURI="model\mprolog.ecore" metaModelName="mprolog.Mprolog"/>
    <hasRule description="FunctorReference">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="FunctorReference"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Functor">
          <attribute attributeName="text"/>
        </class>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="idReference" source="//@source.3/@hasRule.0/@match.0/@class.0" target="//@source.3/@hasRule.0/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Functor">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="TermReference"/>
          </attribute>
          <attribute attributeName="text">
            <attributeValue xsi:type="dsltrans:AttributeRef" attributeRef="//@source.3/@hasRule.0/@match.0/@class.1/@attribute.0"/>
          </attribute>
        </class>
      </apply>
    </hasRule>
    <hasRule description="FunctorReference">
      <match>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="VariableReference"/>
        <class xsi:type="dsltrans:AnyMatchClass" packageName="mprologTermReference" className="Variable">
          <attribute attributeName="name"/>
        </class>
        <association xsi:type="dsltrans:PositiveMatchAssociation" associationName="idReference" source="//@source.3/@hasRule.1/@match.0/@class.0" target="//@source.3/@hasRule.1/@match.0/@class.1"/>
      </match>
      <apply>
        <class packageName="mprolog" className="Variable">
          <attribute>
            <attributeValue xsi:type="dsltrans:Atom" value="TermReference"/>
          </attribute>
          <attribute attributeName="name">
            <attributeValue xsi:type="dsltrans:AttributeRef" attributeRef="//@source.3/@hasRule.1/@match.0/@class.1/@attribute.0"/>
          </attribute>
        </class>
      </apply>
    </hasRule>
  </source>
</dsltrans:TransformationModel>
