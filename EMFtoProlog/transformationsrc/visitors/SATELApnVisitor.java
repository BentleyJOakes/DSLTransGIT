package visitors;
import mprolog.Clause;
import mprolog.Functor;
import mprolog.Model;
import mprolog.Term;

import org.eclipse.emf.common.util.EList;

import SATEL.Axiom;
import SATEL.AxiomDeclaration;
import SATEL.Condition;
import SATEL.ConditionAtom;
import SATEL.ConditionBody;
import SATEL.Inclusion;
import SATEL.IntentionDec;
import SATEL.TestIntentionBody;
import SATEL.TestIntentionInterface;
import SATEL.TestIntentionModule;
import SATEL.APN.adtmm.ADT;
import SATEL.APN.adtmm.AtomicSort;
import SATEL.APN.adtmm.CTerm;
import SATEL.APN.adtmm.CondEquation;
import SATEL.APN.adtmm.Equation;
import SATEL.APN.adtmm.Inequation;
import SATEL.APN.adtmm.Operation;
import SATEL.APN.adtmm.Sort;
import SATEL.APN.adtmm.Variable;
import SATEL.APN.adtmm.VariableRef;
import SATEL.APN.apnmm.Gate;
import SATEL.APN.apnmm.Method;
import SATEL.AlgebraicExpressions.AlgEquality;
import SATEL.AlgebraicExpressions.AlgebraicEquality;
import SATEL.AlgebraicExpressions.HMLEquality;
import SATEL.AlgebraicExpressions.SyncEquality;
import SATEL.AlgebraicExpressions.algterms.AlgebraicTerm;
import SATEL.AlgebraicExpressions.algterms.CompositeTerm;
import SATEL.AlgebraicExpressions.arithmeticterms.ArithmeticTerm;
import SATEL.AlgebraicExpressions.arithmeticterms.BOPDiv;
import SATEL.AlgebraicExpressions.arithmeticterms.BOPMinus;
import SATEL.AlgebraicExpressions.arithmeticterms.BOPPlus;
import SATEL.AlgebraicExpressions.arithmeticterms.BOPTimes;
import SATEL.AlgebraicExpressions.arithmeticterms.IntegerValue;
import SATEL.AlgebraicExpressions.arithmeticterms.IntegerVariable;
import SATEL.AlgebraicExpressions.arithmeticterms.NBEvents;
import SATEL.AlgebraicExpressions.arithmeticterms.UOPMinus;
import SATEL.AlgebraicExpressions.booleanterms.BOPAnd;
import SATEL.AlgebraicExpressions.booleanterms.BOPOr;
import SATEL.AlgebraicExpressions.booleanterms.BooleanTerm;
import SATEL.AlgebraicExpressions.booleanterms.BooleanValue;
import SATEL.AlgebraicExpressions.booleanterms.BooleanVariable;
import SATEL.AlgebraicExpressions.booleanterms.Equals;
import SATEL.AlgebraicExpressions.booleanterms.GT;
import SATEL.AlgebraicExpressions.booleanterms.GTE;
import SATEL.AlgebraicExpressions.booleanterms.LT;
import SATEL.AlgebraicExpressions.booleanterms.LTE;
import SATEL.AlgebraicExpressions.booleanterms.Not;
import SATEL.AlgebraicExpressions.booleanterms.NotEquals;
import SATEL.AlgebraicExpressions.booleanterms.Positive;
import SATEL.AlgebraicExpressions.booleanterms.Sequence;
import SATEL.AlgebraicExpressions.booleanterms.Trace;
import SATEL.HMLFormula.HMLAnd;
import SATEL.HMLFormula.HMLEvent;
import SATEL.HMLFormula.HMLFormula;
import SATEL.HMLFormula.HMLFormulaContent;
import SATEL.HMLFormula.HMLFormulaHMLFormulaContent;
import SATEL.HMLFormula.HMLFormulaPrimitiveHMLVarDec;
import SATEL.HMLFormula.HMLNext;
import SATEL.HMLFormula.HMLNot;
import SATEL.HMLFormula.HMLTerm;
import SATEL.HMLFormula.HMLTop;
import SATEL.HMLFormula.InputEvent;
import SATEL.HMLFormula.OutputEvent;
import SATEL.HMLFormula.Parameter;
import SATEL.HMLFormula.SynchronizationEventInputTerm;
import SATEL.HMLFormula.SynchronizationEventOutputTerm;
import SATEL.HMLFormula.SynchronizationInputTerm;
import SATEL.HMLFormula.SynchronizationOutputTerm;
import SATEL.HMLFormula.SynchronizationTerm;
import SATEL.HMLFormula.WPrimitiveObservationVarDec;
import SATEL.HMLFormula.WPrimitiveStimulationVarDec;
import SATEL.VariableDeclarations.PrimitiveObservationVarDec;
import SATEL.VariableDeclarations.VariableDec;
import SATEL.VariableDeclarations.VariableDeclaration;

 interface SATELApnVisitor {
	Model visit(SATEL.Model model, Environ env);
	void visit(TestIntentionInterface tinterface, Environ env);
	EList<Clause> visit(TestIntentionModule testIntentionModule, Environ env);
	EList<Clause> visit(ADT adt, Environ env);
	String visit(Operation operation, Environ env);
	Clause visit(CondEquation condEquation, Environ enc);
	String visit(AtomicSort sort, Environ env);
	Term visit(Equation abstractEquation, Environ env);
	Term visit(CTerm cterm, Environ env);
	Term visit(SATEL.APN.adtmm.Term term, Environ env);
	String visit(Sort sort, Environ env);
	Term visit(VariableRef variable, Environ env);
	Term visit(Variable variable, Environ env);
	Term visit(Inequation equation, Environ env);
	EList<Clause> visit(AxiomDeclaration axiomDecl, Environ env);
	Clause visit(Axiom axiom, Environ env);
	Term visit(Condition cond, Environ env);
	Term visit(Inclusion in, Environ env);
	Term visit(IntentionDec in, Environ env);
	Term visit(HMLTerm hmlTerm, Environ env);
	Term visit(HMLFormula hmlFormula, Environ env);
	Term visit(HMLFormulaHMLFormulaContent hmlFormula, Environ env);
	Term visit(HMLFormulaPrimitiveHMLVarDec hmlFormula, Environ env);
	Term visit(HMLFormulaContent hmlFormulaContent, Environ env);
	Term visit(HMLNext hmlNext, Environ env);
	Term visit(HMLTop hmlTop, Environ env);
	Term visit(HMLAnd hmlAnd, Environ env);
	Term visit(HMLNot hmlNot, Environ env);
	Term visit(HMLEvent hmlEvent, Environ env);
	Term visit(SynchronizationInputTerm inputTerm, Environ env);
	Term visit(SynchronizationEventOutputTerm outputTerm, Environ env);
	Term visit(WPrimitiveStimulationVarDec wprimitiveStimulationVarDec,
			Environ env);
	Term visit(SynchronizationOutputTerm outputTerm, Environ env);
	Term visit(InputEvent event, Environ env);
	Term visit(Method method, Environ env);
	Term visit(Parameter param, Environ env);
	Term visit(SynchronizationEventInputTerm inputTerm, Environ env);
	Functor visit(OutputEvent event, Environ env);
	Functor visit(Gate event, Environ env);
	Term visit(AlgebraicTerm value, Environ env);
	Term visit(CompositeTerm cterm, Environ env);
	Term visit(ConditionBody condBody, Environ env);
	Term visit(ConditionAtom ca, Environ env);
	Term visit(BooleanTerm bt, Environ env);
	Term visit(LTE lte, Environ env);
	Term visit(GTE gte, Environ env);
	Term visit(LT lt, Environ env);
	Term visit(GT gt, Environ env);
	Term visit(NotEquals notEquals, Environ env);
	Term visit(Equals equals, Environ env);
	Term visit(BOPOr bopOr, Environ env);
	Term visit(BOPAnd bopAnd, Environ env);
	Term visit(BooleanValue boolValue, Environ env);
	Term visit(BooleanVariable booleanVariable, Environ env);
	Term visit(Trace trace, Environ env);
	Term visit(Positive positive, Environ env);
	Term visit(Sequence sequence, Environ env);
	Term visit(Not not, Environ env);
	Term visit(ArithmeticTerm at, Environ env);
	Term visit(IntegerVariable integerVariable, Environ env);
	Term visit(IntegerValue integerValue, Environ env);
	Term visit(BOPPlus bopPlus, Environ env);
	Term visit(BOPTimes bopTimes, Environ env);
	Term visit(BOPMinus bopMinus, Environ env);
	Term visit(BOPDiv bopDiv, Environ env);
	Term visit(NBEvents nbEvents, Environ env);
	Term visit(UOPMinus uopMinus, Environ env);
	Term visit(AlgebraicEquality ae, Environ env);
	Term visit(AlgEquality ae, Environ env);
	Term visit(SyncEquality se, Environ env);
	Term visit(SynchronizationTerm synchronizationTerm, Environ env);
	Term visit(HMLEquality he, Environ env);
	EList<Clause> visit(TestIntentionBody body, Environ env);
	void visit(VariableDeclaration variableDeclaration, Environ env);
	Term visit(VariableDec variableDec, Environ env);
	Term visit(WPrimitiveObservationVarDec wprimitiveObsVarDec, Environ env);
	
}
